# 01
def solution(num1, num2):
    if num1 == num2:
        answer = 1
    else:
        answer = -1
    return answer
    
# 02
def solution(num1, num2):
    answer = num1 + num2
    return answer

# 03
def solution(num1, num2):
    answer = num1 % num2
    return answer

# 04
def solution(num1, num2):
    answer = num1 // num2
    return answer

# 05
def solution(age):
    answer = 2022 - (age-1)
    return answer

# 06
def solution(numbers):
    answer = (sum(numbers) / len(numbers))
    return answer

# 07
def solution(num1, num2):
    answer = num1 - num2
    return answer

# 08
def solution(str1, str2):
    answer = 0
    Count = 0
    Count = str1.count(str2)
    if (Count >= 1):
        answer = 1
    else:
        answer = 2
    return answer

# 09
def solution(num1, num2):
    answer = int((num1 / num2) * 1000)
    return answer

# 10
def solution(n):
    answer = 0
    for i in range(0, (n+1), 2):
        answer += i
    return answer

# 11
def solution(array, height):
    answer = 0
    for i in range(0, len(array), 1):
        if (height < array[i]):
            answer += 1
    return answer

# 12
def solution(numbers):
    answer = 0
    
    numbers = sorted(numbers)
    answer = numbers[len(numbers)-1] * numbers[len(numbers)-2]
    return answer

# 13
def solution(angle):
    if (angle < 90):
        answer = 1
    elif (angle == 90):
        answer = 2
    elif (90 < angle < 180):
        answer = 3
    elif (angle == 180):
        answer = 4
        
    return answer
    
# 14
def solution(n, k):
    answer = 0
    answer += 12000 * n
    if (n >= 10):
        Juice = n // 10
        answer = (12000 * n) + ((k - Juice) * 2000)
    else:
        answer = (12000 * n) + (k * 2000)
    return answer

# 15
def solution(n, t):
    answer = n
    for i in range(0, t, 1):
        answer += answer
    return answer

# 16
def solution(array, n):
    answer = 0
    for i in array:
        if (i == n):
            answer += 1
    return answer

# 17
def solution(numbers, num1, num2):
    answer = []
    for i in range(num1, (num2+1), 1):
        answer.append(numbers[i])
    
    return answer

# 18
def solution(n):
    answer = 0
    while(n > 0):
        n -= 7
        answer += 1
    return answer

# 19
def solution(array):
    answer = 0
    for i in range(0, len(array), 1):
        array[i] = array[i] * 2
    answer = array
    return answer

# 20
def solution(message):
    message = list(str(message))
    answer = len(message) * 2
    return answer
    
# 21
def solution(array):
    array = sorted(array)
    answer = array[int(len(array)/2)]
    return answer

# 22
def solution(strlist):
    answer = []
    for i in range(0, len(strlist), 1):
        answer.append(len(list(map(str, strlist[i]))))
    return answer

# 23
def solution(n):
    answer = sum(list(map(int, list(str(n)))))
    return answer

# 24
def solution(my_string):
    Str = list(map(str, my_string))
    Str.reverse()
    answer = ''
    
    for i in Str:
        answer += i
    return answer

# 25
def solution(n):
    answer = []
    for i in range(1, (n+1), 2):
        answer.append(i)
    return answer

# 26
def solution(n):
    answer = 0
    number = 1
    while(True):
        if (number*number == n):
            answer = 1
            break
        elif (number == n):
            answer = 2
            break
        number += 1
    return answer

# 27
def solution(dot):
    if (dot[0] > 0 and dot[1] > 0):
        answer = 1
    elif (dot[0] < 0 and dot[1] > 0):
        answer = 2
    elif (dot[0] < 0 and dot[1] < 0):
        answer = 3
    elif (dot[0] > 0 and dot[1] < 0):
        answer = 4        
        
    return answer

# 28
def solution(n):
    answer = []
    for i in range(1, (n+1), 1):
        if (n % i == 0):
            answer.append(i)
    return answer

# 29
def solution(my_string, n):
    answer = ''
    my_string = list(str(my_string))
    for i in range(0, len(my_string), 1):
        answer += my_string[i]*n
    return answer

# 30
def solution(money):
    answer = [(money)//5500, money%5500]
    return answer
    
# 31
def solution(my_string):
    answer = ''
    my_string = list(my_string)
    my_string = list(dict.fromkeys(my_string))
    
    for i in range(0, len(my_string), 1):
        answer += my_string[i]
        
    return answer

# 32
def solution(my_string, letter):
    my_string = list(str(my_string))
    Count = my_string.count(letter)
    answer = ''
    
    for i in range(0, Count, 1):
        my_string.remove(letter)
    
    for j in range(0, len(my_string), 1):
        answer += my_string[j]    
    return answer

# 33
def solution(n, numlist):
    answer = []
    for i in range(0, len(numlist), 1):
        if (numlist[i] % n == 0):
            answer.append(numlist[i])
    return answer

# 34
def solution(rsp):
    answer = ''
    rsp = list(rsp)
    
    for i in range(0, len(rsp), 1):
        if (rsp[i] == '2'):
            answer += '0'
        elif (rsp[i] == '0'):
            answer += '5'
        else:
            answer += '2'
    
    return answer

# 35
def solution(sides):
    answer = 0
    Total = 0
    sides = sorted(sides)
    
    for i in range(0, len(sides)-1, 1):
        Total += sides[i]
    
    if (sides[len(sides) - 1] >= Total):
        answer = 2
    else:
        answer = 1
        
    return answer

# 36
def solution(my_string):
    answer = []
    Num_list = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    for i in my_string:
        for j in Num_list:
            if (i == j):
                answer.append(int(i))
    answer.sort()
    return answer
    
# 37
def solution(my_string):
    A = []
    answer = ''
    Alpha = ['a', 'e', 'i', 'o', 'u']
    my_string = list(str(my_string))
    
    for j in Alpha:
        for i in my_string:
            if (j == i):
                A.append(j)
                
    for k in range(0, len(A), 1):
        my_string.remove(A[k])

    for _ in range(0, len(my_string), 1):
        answer += my_string[_]

    return answer
    
# 38
def solution(price):
    answer = 0
    
    if (1000000 > price >= 500000):
        answer += int(price * 0.8)
        
    elif (500000 > price >= 300000):
        answer += int(price * 0.9)
        
    elif (300000 > price >= 100000):
        answer += int(price * 0.95)
        
    else:
        answer += price
        
    return answer

# 39
def solution(s1, s2):
    answer = 0
    for i in range(0, len(s1), 1):
        answer += s2.count(s1[i])
    return answer

# 40
def solution(num_list):
    answer = []
    A = 0
    B = 0
    for i in range(0, len(num_list), 1):
        if (num_list[i] % 2 == 0):
            A += 1
        else:
            B += 1
            
    answer.append(A)
    answer.append(B)
    return answer
    
# 41
def solution(my_string, num1, num2):
    answer = ''
    my_string = list(str(my_string))
    
    A = my_string[num1]
    my_string[num1] = my_string[num2]
    my_string[num2] = A
    
    for i in range(0, len(my_string), 1):
        answer += my_string[i]
    return answer
   
# 42
def solution(num, k):
    answer = 0
    num = list(str(num))
    k = str(k)
    try:
        answer = num.index(k)+1
    except:
        answer = -1
    return answer
    
 # 43
 def solution(my_string):
    answer = ''
    my_string = list(str(my_string))
    
    for i in my_string:
        A = i.isupper()
        Save = i
        if (A == False):
            i = i.upper()
            answer += i
        else:
            i = i.lower()
            answer += i
    return answer
 
 # 44
 def solution(my_string):
    answer = ''
    Collect = []
    my_string = list(str(my_string))
    
    for i in my_string:
        A = i.isupper()
        Save = i
        if (A == False):
            Collect.append(i)
        else:
            i = i.lower()
            Collect.append(i)

    Collect = sorted(Collect)
    for j in range(0, len(Collect), 1):
        answer += Collect[j]
        
    return answer
 
 # 45
 def solution(order):
    answer = 0
    order = list(str(order))
    
    for i in order:
        if (i == '3'):
            answer += 1
        elif (i == '6'):
            answer += 1
        elif (i == '9'):
            answer += 1
    return answer

# 46
def solution(slice, n):
    answer = 0
    while(n > 0):
        n -= slice
        answer += 1
    return answer
        
# 47
def solution(num_list):
    answer = []
    num_list.reverse()
    for i in num_list:
        answer.append(i)
    return answer

# 48
def solution(array):
    answer = []
    answer.append(max(array))
    answer.append(array.index(max(array)))
    return answer
    
# 49
def solution(arr, divisor):
    answer = []
    for i in range(0, len(arr), 1):
        if (arr[i] % divisor == 0):
            answer.append(arr[i])
    if (len(answer) == 0):
        answer.append(-1)
    
    answer = sorted(answer)
    return answer

# 50
def solution(array):
    answer = 0
    array = list(str(array))
    for i in array:
        if i == '7':
            answer += 1
    return answer
    
# 51
def solution(age):
    answer = ''
    Alpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
    age = list(str(age))
    for i in range(len(age)):
        answer += Alpha[int(age[i])]
    
    return answer

# 52
def solution(box, n):
    answer = 0
    
    for i in range(0, len(box), 1):
        box[i] = box[i] - (box[i] % n)
        
    n = n*n*n
    answer = (box[0]*box[1]*box[2]) // n 
    return answer
    
# 53
def solution(hp):
    answer = 0
    while(hp > 0):
        if (hp // 5 >= 1):
            hp -= 5
            answer += 1
        elif (hp // 3 >= 1):
            hp -= 3
            answer += 1
        elif (hp > 0):
            hp -= 1
            answer += 1
    return answer
    
# 54
def solution(before, after):
    answer = 0
    before = sorted(list(str(before)))
    after = sorted(list(str(after)))
    
    for i in range(0, len(before), 1):
        if (before[i] != after[i]):
            answer = 0
            break
        else:
            answer = 1
    return answer

# 55
def solution(n):
    answer = 0
    for i in range(1, n+1 , 1):
        if (n % i == 0):
            answer += 1
    return answer
    
# 56
n = int(input())
for i in range(1, n+1, 1):
    print("*" * i)
    
# 57
def solution(my_string):
    answer = 0
    Number = ['1', '2', '3', '4', '5', '6', '7', '8', '9']
    my_string = list(str(my_string))
    for i in range(0, len(my_string), 1):
        for j in Number:
            if my_string[i] == j:
                answer += int(my_string[i])
    return answer

# 58
def solution(n):
    answer = 0
    Num = 1
    while(True):
        Save = Num * 6
        Num += 1
        if (Save % n == 0):
            answer = Save // 6
            break
    return answer
    
# 59
def solution(numbers, direction):
    answer = []
    if (direction == "right"):
        Save = numbers.pop()
        numbers.insert(0, Save)
    elif (direction == "left"):
        Save = numbers[0]
        numbers.remove(numbers[0])
        numbers.append(Save)
    answer = numbers
        
    return answer
    
# 60
def solution(cipher, code):
    answer = ''
    cipher = list(str(cipher))
    Save = code
    for i in range(0, len(cipher)+1, 1):
        if (i % code == 0):
            answer += cipher[(code - 1)]
            code += Save
    return answer
    
# 61
def solution(n):
    answer = 0
    for i in range(1, n+1, 1):
        Save = []
        for j in range(1, n+1, 1):
            if (i % j == 0):
                Save.append(j)
        if (len(Save) >= 3):
            answer += 1
    return answer
    
# 62
def solution(num_list, n):
    answer = []
    Save = []
    Num = 0
    while(True):
        if (len(Save) <= (n-1)):
            Save.append(num_list[Num])
            Num += 1
        elif (len(Save) == n):
            answer.append(Save)
            Save = []
            
        if (len(num_list)//n == len(answer)):
            break
    return answer

# 63
def solution(M, N):
    answer = (M * N) -1
    return answer
    
# 64 (선배님 도움 받은 문제)
def solution(numbers):
    numbers.sort()
    arr = []
    answer1 = numbers[0]*numbers[1]
    answer2 = numbers[-1]*numbers[-2]
    arr.append(answer1)
    arr.append(answer2)
    arr.sort(reverse=True)
    
    if (arr[0] > 0):
        answer = arr[0]
    elif (arr[1] > 0):
        answer = arr[1]
    elif (0 in numbers):
        answer = 0
    else:
        answer = arr[0]
        
    return answer
# 65
def solution(my_str, n):
    my_str = list(str(my_str))
    answer = []
    Save_Word = ''
    Save_Number = 0
    Save = n
    
    while(True):
        try:
            Save_Word += my_str[Save_Number]
            Save_Number += 1
        except:
            pass
        
        if (Save_Number % n == 0 or Save_Number == len(my_str)):
            answer.append(Save_Word)
            Save_Word = ''
            n += Save
            if (Save_Number == len(my_str)):
                break
    return answer

# 66
def solution(i, j, k):
    answer = 0
    K_str = str(k)
    for i in range(i, j+1, 1):
        Num_str = list(str(i))
        if (Num_str.count(K_str) > 0):
            answer += Num_str.count(K_str)
    return answer

# 67
def solution(array, n):
    answer = 0
    Num = 0
    Result = []
    array.sort()
    
    for i in range(len(array)):
        Num = abs(n - array[i])
        Result.append(Num)
    
    answer = array[Result.index(min(Result))]
    return answer

# 68
def solution(s):
    answer = ''
    s = list(str(s))
    Save = []
    
    for i in s:
        if (s.count(i) == 1):
            Save.append(i)
    Save = sorted(Save)
    
    for j in Save:
        answer += j
    return answer

# 69
def solution(letter):
    answer = ''
    morse = { 
    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',
    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',
    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',
    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',
    '-.--':'y','--..':'z'
    }
    Save = ""
    for s in letter.split(" "):
        answer += morse[s]
    
    return answer

# 70
def solution(n):
    answer = 0
    Num = 1
    Plus = 1
    
    while(True):
        if (n >= Num):
            Num *= Plus
            Plus += 1
            answer += 1
        elif (n < Num):
            answer -= 1
            break
    return answer
    
# 71
def solution(numbers, k):
    answer = 0
    Num = 2 * (k-1)
    while(True):
        if (Num > len(numbers)):
            Num -= len(numbers)
        else:
            break
            
    answer = numbers[Num]
    return answer

# 72
def solution(bin1, bin2):
    Plus = list(map(int, str(int(bin1) + int(bin2))))
    answer = ''
    Save_Number = 0
    Num = 1

    for j in range(len(Plus)-1, -1, -1):
        Save_Number += (Plus[j] * Num)
        Num *= 2

    Bin = bin(Save_Number)

    for i in range(2, len(Bin), 1):
        answer += str(Bin[i])
    return answer

# 73
def solution(spell, dic):
    answer = 0
    for i in range(len(dic)):
        Spell_Num = 0
        for j in spell:
            if (dic[i].count(j) >= 1):
                Spell_Num += 1
        if (len(spell) == Spell_Num):
            answer += 1
    if (answer >= 1):
        answer = 1
    else:
        answer = 2
    return answer

# 74
def solution(emergency):
    answer = []
    Sort_E = sorted(emergency)
    Sort_E.reverse()

    for i in range(0, len(emergency), 1):
        answer.append(Sort_E.index(emergency[i]) + 1)
    return answer

# 75
def solution(my_string):
    my_string = my_string.split()
    answer = int(my_string[0])

    for i in range(1, len(my_string), 2):
        if (my_string[i] == "+"):
            answer += int(my_string[i+1])
        else:
            answer -= int(my_string[i+1])

    return answer

# 76
def solution(n):
    answer = []
    Num = 2

    while (Num <= n):
        if n % Num == 0:
            answer.append(Num)
            n = n / Num
        else:
            Num += 1
    answer = list(set(answer))
    
    return answer
    
# 77
def solution(numbers):
    answer = 0
    a = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
    b = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    Result_str = ''

    for i in range(10):
        num = numbers.count(a[i])
        if (num >= 1):
            Result_str += str(a.index(a[i]))
    answer = int(Result_str)
    return answer

# 78
def solution(keyinput, board):
    answer = [0, 0]

    for i in range(len(keyinput)):
        if (keyinput[i] == "right"):
            print(answer)
            answer[0] += 1
            if (abs(answer[0]) > abs(board[0] // 2)):
                answer[0] -= 1

        elif (keyinput[i] == "left"):
            print(answer)
            answer[0] -= 1
            if (-(abs(answer[0])) < -(abs(board[0] // 2))):
                answer[0] += 1

        elif (keyinput[i] == "up"):
            print(answer)
            answer[1] += 1
            if (abs(answer[1]) > abs(board[1] // 2)):
                answer[1] -= 1

        elif (keyinput[i] == "down"):
            print(answer)
            answer[1] -= 1
            if (-(abs(answer[1])) < -(abs(board[1] // 2))):
                answer[1] += 1

    return answer
    
# 79
def solution(s):
    answer = 0
    s = list(s.split())
    for i in range(len(s)):
        if (s[i] == "Z"):
            answer -= int(s[i-1])
        else:
            answer += int(s[i])
    
    return answer

# 80
def solution(sides):
    answer = 0
    answer_list = []
    tall = 0
    small = 0
    
    if (sides[0] > sides[1]):
        tall = sides[0]
        small = sides[1]
    else:
        tall = sides[1]
        small = sides[0]

    for i in range(1, tall+1, 1):
        if (tall < small+i):
            answer_list.append(i)
            if (tall == small+i):
                break
    answer = (len(answer_list) + (len(answer_list) - 1))

    return answer

# 81
def solution(id_pw, db):
    answer = ''
    for i in db:
        if id_pw[0] in i:
            if id_pw[1] == i[1]:
                answer = "login"
                break
            else:
                answer = "wrong pw"
                break
    else:
        answer = "fail"
    return answer

# 82
def solution(dots):
    answer = 0
    dots_x = []
    dots_y = []

    for i in dots:
        dots_x.append(i[0])
        dots_y.append(i[1])
        
    answer = (max(dots_x) - min(dots_x)) * (max(dots_y) - min(dots_y))

    return answer

# 83
※ 방법(1)
def solution(A, B):
    answer = 0

    if (A != B):
        A = list(A)

        for _ in range(len(A)):
            A_word = ''
            answer += 1
            A.insert(0, A.pop())
            for i in A:
                A_word += i
            
            if(A_word == B):
                return answer
            
        return(-1)
    return answer
    
※ 방법(2)
def solution(A, B):
    A = list(A)
    B = list(B)

    for i in range(len(A)):    
        if(A == B):
            return i
        else:
            A.insert(0, A.pop(4))

    return(-1)

# 84
def solution(chicken):
    answer = 0
    coupon = 0

    while(chicken >= 10):
        coupon = chicken // 10
        answer += coupon
        chicken = (chicken % 10) + coupon

    return answer

# 85
def solution(chicken):
    answer = 0
    coupon = 0

    while(chicken >= 10):
        coupon = chicken // 10
        answer += coupon
        chicken = (chicken % 10) + coupon
    
    return answer

# 86
from math import gcd

def solution(a, b):
    answer = 0
    b //= gcd(a, b)

    while (b % 2 == 0):
        b //= 2
    while (b % 5 == 0):
        b //= 5

    if (b == 1):
        answer = 1
    else:
        answer = 2
    
    return answer

# 87
def solution(numlist, n):
    answer = []
    minus = []
    distance = []
    
    for i in numlist:
        minus.append(i - n)

    for j in numlist:
        if (j - n >= 0):
            distance.append(j - n)
        else:
            distance.append(abs(j-n))
    distance = sorted(distance)

    for k in range(0, len(distance)-1, 1):
        if (distance[k] == distance[k+1]):
            distance[k+1] = -distance[k+1]
    
    for l in range(0, len(distance), 1):
        if (minus.count(distance[l]) == 0):
            distance[l] *= -1

    for num in distance:
        answer.append(num + n)
    
    return answer
