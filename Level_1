# 01
def solution(num):
    if (num % 2 == 1):
        answer = 'Odd'
    elif (num % 2 == 0):
        answer = 'Even'
    return answer

# 02
def solution(arr):
    answer = sum(arr) / len(arr)
    return answer

# 03
def solution(n):
    A = []
    for i in range(1, (n+1), 1):
        if (n % i == 0):
            A.append(i)
    answer = sum(A)
    return answer

# 04
def solution(n):
    answer = sum(list(map(int, list(str(n)))))
    return answer

# 05
def solution(n):
    step = 1
    answer = 0
    while(True):
        num = step*step
        if step*step == n:
            answer = (step+1) * (step+1)
            break
        elif (num >= n):
            answer = -1
            break
        step += 1
    return answer

# 06
def solution(n):
    answer = list(map(int, str(n)))
    answer.reverse()
    return answer

# 07
def solution(s):
    s = list(map(str, s))
    
    Y = 0
    P = 0
    
    for i in s:
        if (i == 'p' or i == 'P'):
            Y += 1
        elif (i == 'y' or i == 'Y'):
            P += 1
    if (Y == P):
        return True
    else:
        return False

# 08
def solution(x):
    X = list(str(x))
    Total = 0
    
    for i in range(0, len(X), 1):
        Total += int(X[i])
        
    if (x % Total == 0):
        return True
    else:
        return False

# 09
def solution(n):
    n = sorted(list(str(n)))
    n.reverse()
    answer = ''
    
    for i in n:
        answer += i
        
    return int(answer)

# 10
def solution(s):
    answer = int(s)
    return answer

# 11
def solution(x, n):
    answer = []
    num = x
    for i in range(0, n, 1):
        answer.append(num)
        num += x
    return answer

# 12
def solution(n):
    answer = 0
    for i in range(1, n, 1):
        if (n % i == 1):
            answer = i
            break
    return answer

# 13
def solution(num):
    if (num == 1):
        answer = 0
    else:
        answer = 0
        while (True):
            if (num != 1):
                if (num % 2 == 0):
                    num = num // 2
                    answer += 1
                elif (num % 2 == 1):
                    num = num * 3 + 1
                    answer += 1
            elif (num == 1):
                break        
            
            if (answer >= 500):
                answer = -1
                break
                
    return answer

# 14
def solution(a, b):
    answer = 0
    if (a <= b):
        for i in range(a, (b+1), 1):
            answer += i
            
    if (a > b): 
        for i in range(b, (a+1), 1):
            answer += i
    return answer

# 15
def solution(seoul):
    Number = str(seoul.index("Kim"))
    Front = "김서방은 "
    Back = "에 있다"
    answer = Front + Number + Back
    return answer

# 16
def solution(phone_number):
    answer = ''
    phone_number = list(str(phone_number))
    for i in range(0, len(phone_number)-4, 1):
        phone_number[i] = '*'
        
    for j in phone_number:
        answer += j
    return answer
    
# 17
def solution(arr):
    answer = []
    if (len(arr) == 1):
        answer.append(-1)
    else:
        arr.remove(min(arr))
        for i in arr:
            answer.append(i)
    return answer

# 18
def solution(absolutes, signs):
    answer = 0
    for i in range(0, len(absolutes), 1):
        if (signs[i] == False):
            answer -= absolutes[i]
        elif (signs[i] == True):
            answer += absolutes[i]
    return answer

# 19
def solution(numbers):
    answer = 0
    Not = []
    for i in range(1, 10, 1):
        if (numbers.count(i) == 0):
            Not.append(i)
    answer = sum(Not)
    return answer
    
# 20
def solution(s):
    answer = ''
    Save = []
    s = list(str(s))
    
    if (len(s) % 2 == 0):
        Num = (len(s)//2) - 1
        for _ in range(0, 2, 1):
            Save.append(s[Num])
            Num += 1
        for i in range(0, len(Save), 1):
            answer += Save[i]
    else:
        Num = len(s)//2
        answer += s[Num]
    return answer

# 21
def solution(n):
    answer = ''
    for i in range(1, n+1 , 1):
        if (i % 2 == 0):
            answer += '박'
        else:
            answer += '수'
    return answer

# 22
def solution(a, b):
    answer = 0
    for i in range(0, len(a), 1):
        answer += (a[i] * b[i])
    return answer
 
 # 23
 def solution(s):
    answer = 0
    s = list(str(s))
    Num = 0
    Numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    if (len(s) == 4 or len(s) == 6):
        for i in range(0, len(s), 1):
            if (Numbers.count(s[i]) == 0):
                answer = False
                break
            elif (Numbers.count(s[i]) > 0):
                answer = True
    else:
        answer = False
    return answer
    
# 24
def solution(s):
    answer = ''
    s = sorted(list(str(s)))
    s.reverse()
    for i in s:
        answer += i
    return answer

# 25
def solution(left, right):
    answer = 0
    for i in range(left, right+1, 1):
        Save_List = []
        for j in range(1, i+1, 1):
            if (i % j == 0):
                Save_List.append(j)
        if (len(Save_List) % 2 == 0):
            answer += i
        elif (len(Save_List) % 2 == 1):
            answer -= i
    return answer
    
# 26
def solution(arr1, arr2):
    answer = []
    for i in range(0, len(arr1), 1):
        Save_List = []
        for j in range(0, len(arr1[i]), 1):
            Save_List.append(arr1[i][j] + arr2[i][j])
        answer.append(Save_List)
    return answer

# 27
def solution(price, money, count):
    answer = 0
    Total = 0
    
    for i in range(1, count+1, 1):
        Total += (price * i)
    
    if (Total <= money):
        answer = 0
    elif (Total > money):
        answer = Total - money
    return answer
    
# 28
a, b = map(int, input().split())

for i in range(b):
    print("*"*a)

# 29
def solution(board, moves):
    answer = 0
    Num = 0
    length = len(board)
    Save_Number = 0
    Save = []
    
    for i in range(0, len(moves), 1):
        Num = moves[i] - 1
        for j in range(0, length, 1):
            Save_Number = board[j][Num]
            if (Save_Number != 0):
                Save.append(Save_Number)
                board[j][Num] = 0
                break           
    
        if (len(Save) >= 2):
            if (Save[-1] == Save[-2]):
                Save.pop(-1)
                Save.pop(-1)
                answer += 2
    return answer

# 30
def solution(n, m):
    answer = []
    
    for i in range(min(n, m)+1, 0, -1):
        if (n % i == 0 and m % i == 0):
            answer.append(i)
            break 
    
    if (m % n == 0):
        answer.append(m)
    elif (m % n != 0):
        for i in range(1, n+1, 1):
            if (m*i % n == 0):
                answer.append(m*i)
                break
    return answer

# 31
def solution(arr):
    answer = []
    Num = 0
    Save = arr[0]
    answer.append(Save)
    for i in range(1, len(arr), 1):
        Save = arr[i]
        if (answer[Num] != arr[i]):
            answer.append(Save)
            Num += 1
    return answer
    
# 32
def solution(s):
    answer = ''
    s = s.split(' ')
    for j in s:
        for i in range(0, len(j), 1):
            if (i % 2 == 0):
                answer += j[i].upper()
            else:
                answer += j[i].lower()
        answer += ' '
    answer = answer[:-1]
    return answer

# 33
def solution(n):
    The_rest = 0
    Total = ''
    while n > 0:
        n, The_rest = divmod(n, 3)
        Total += str(The_rest)
    Total = Total[:len(Total)]
    return int(Total, 3)
